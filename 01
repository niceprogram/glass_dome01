#include <Adafruit_NeoPixel.h>

int Input_potentiometer;
int Digital_input_motor;
int PWM_input_motor;

// function...Arduino systems startup indicator
void blink() {
  for (int count = 0; count < 3; count++) {
    delay(500);
    digitalWrite(13, HIGH);
    delay(500);
    digitalWrite(13, LOW);
  }
  for (int count2 = 0; count2 < 10; count2++) {
    delay(50);
    digitalWrite(13, HIGH);
    delay(50);
    digitalWrite(13, LOW);
  }
}

// Describe this function...
void test_output() {
  Serial.print(Input_potentiometer);
}

// Describe this function...
void colour_LED() {
  pixels_NeoPixels.setPixelColor(0, pixels_NeoPixels.Color(255,255,255));
  pixels_NeoPixels.show();
}

Adafruit_NeoPixel pixels_NeoPixels = Adafruit_NeoPixel(3, 6, NEO_GRB + NEO_KHZ800);
// function...motor A prepares the pin numbers and speed
void motorA(undefined motor_speed) {
  motor(motor_speed, 3, 5);
}

// function...motor B prepares the pin numbers and speed
void motorB(undefined motor_speed) {
  motor(motor_speed, 6, 9);
}

// Describe this function...
void motor(undefined motor_speed, undefined motor_IN1, undefined motor_IN2) {
  if (motor_speed <= 0) {
    PWM_input_motor = motor_IN1;
    Digital_input_motor = motor_IN2;

  } else {
    PWM_input_motor = motor_IN2;
    Digital_input_motor = motor_IN1;

  }
  analogWrite(PWM_input_motor, motor_speed);
  digitalWrite(Digital_input_motor, LOW);
}

// Describe this function...
void LED1(undefined pin_) {
  LED(0);
}

// Describe this function...
void LED(undefined LED_pin) {
  analogWrite(, 0);
}


void setup() {
  pinMode(13, OUTPUT);
  Serial.begin(9600);
  pinMode(6, OUTPUT);
  pixels_NeoPixels.begin();
    Input_potentiometer = 0;
  Digital_input_motor = 0;
  PWM_input_motor = 0;
  // start the Arduino Pro mini ATMEGA 328P 3.3v
  blink();

  pinMode(PWM_input_motor, OUTPUT);
  pinMode(Digital_input_motor, OUTPUT);
  pinMode(, OUTPUT);
}

void loop() {
    Input_potentiometer = (map(analogRead(0), 0, 1023, 0, 255));
    test_output();
    motorA(Input_potentiometer);
    motorB(Input_potentiometer);

}
